@page "/devices"
@page "/devicesoverview"
@using ManagementCentral.Contracts.Services
@using ManagementCentral.Models
@using ManagementCentral.Services
@rendermode InteractiveServer

<h3>DevicesOverview</h3>
<button><a href="/deviceadd">Add device</a></button>

@if (Devices == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Device ID</th>
                <th scope="col">Location</th>
                <th scope="col">Date</th>
                <th scope="col">Type</th>
                <th scope="col">Status</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var device in Devices)
            {
                <tr>
                    <td>@device.Id</td>
                    <td>@device.Location</td>
                    <td>@device.LastEditedOn</td>
                    <td>@device.Type</td>
                    @if (device.isActive)
                    {
                        <td class="bg-success rounded">Online</td>
                    }
                    else
                    {
                        <td class="bg-danger rounded">Offline</td>
                    }
                    <td>
                        <button class="btn btn-primary">
                            <a href="@($"deviceedit/{device.Id}")">Edit</a>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Device> Devices = new List<Device>();

    [Inject]
    public IDeviceDataService? DeviceDataService { get; set; }

    protected async override Task OnInitializedAsync()
    
    {
        Devices = (await DeviceDataService.GetDevices()).ToList();
    }
}
