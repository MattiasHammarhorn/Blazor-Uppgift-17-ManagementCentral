@page "/deviceedit/{DeviceId:guid}"
@using ManagementCentral.Contracts.Services
@using ManagementCentral.Models;
@rendermode InteractiveServer

<h3>DeviceEdit</h3>

<EditForm Enhance Model="Device" FormName="EditDeviceForm"
    OnValidSubmit="@HandleValidSubmit"
    method="post">
    <div class="row mb-3 input-group">
        <label for="type" class="col-3 form-label">Type: </label>
        <InputText id="type" @bind-Value="@Device.Type" placeholder="Enter type" class="col-8 form-control"></InputText>
    </div>

    <div class="row mb-3 input-group">
        <label for="location" class="col-3 form-label">Location: </label>
        <InputText id="location" @bind-Value="@Device.Location" placeholder="Enter location" class="col-8 form-control"></InputText>
    </div>

    <div class="row mb-3 input-group">
        <label for="data" class="col-3 form-label">Data: </label>
        <InputTextArea id="data" @bind-Value="@Device.LastData" placeholder="Enter data" class="col-8 form-control" rows="3"></InputTextArea>
    </div>

    <div class="row mb-3 input-group">
        <label for="isActive" class="col-3 form-label">Status: </label>
        <InputRadioGroup id="type" @bind-Value="@Device.isActive" class="col-8">
            <div class="form-check">
                <InputRadio Value=true class="form-check-input" />
                <label class="form-check-label">Online</label>
            </div>
            <div class="form-check">
                <InputRadio Value=false class="form-check-input" />
                <label class="form-check-label">Offline</label>
            </div>
        </InputRadioGroup>
    </div>

    <button type="submit" class="btn btn-success">Save device</button>

    <button type="button" @onclick="@DeleteDevice" class="btn btn-danger">
        Delete
    </button>
</EditForm>

@code {
    [Inject]
    public IDeviceDataService DeviceDataService { get; set; }

    [Parameter]
    public Guid DeviceId { get; set; }

    [SupplyParameterFromForm]
    public Device Device { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Device = await DeviceDataService.GetDeviceById(DeviceId);
    }

    // Todo: Add success and fail message
    protected async Task HandleValidSubmit()
    {
        await DeviceDataService.UpdateDevice(Device);
    }

    protected async Task DeleteDevice()
    {
        await DeviceDataService.DeleteDevice(Device.Id);
    }
}
